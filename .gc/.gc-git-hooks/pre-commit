#!/usr/bin/env bash
# This git hook will run on the client before a commit is made.

gc_git_hook_client_pre_commit() {
	GITCID_DIR=${GITCID_DIR:-".gc/"}

	source "${GITCID_DIR}deps.sh" $@
	res_import_deps=$?
	if [ $res_import_deps -ne 0 ]; then
		gitcid_log_warn "${BASH_SOURCE[0]}" $LINENO "Failed importing GitCid dependencies. Things might not work properly, so you might want to address the issue."
	fi

	gitcid_log_info "${BASH_SOURCE[0]}" $LINENO "Invoked client git hook: ${BASH_SOURCE[0]} $@"

  GC_EPOCH_TXT_FILE_PATH=".gc-epoch.txt"
  if [ -f "$GC_EPOCH_TXT_FILE_PATH" ]; then
    gitcid_log_info "${BASH_SOURCE[0]}" $LINENO "Removing an initial commit file that was created by gitcid, because we don't need it anymore: $GC_EPOCH_TXT_FILE_PATH"
    rm "$GC_EPOCH_TXT_FILE_PATH"
    git add "$GC_EPOCH_TXT_FILE_PATH"
    gitcid_log_info "${BASH_SOURCE[0]}" $LINENO "Initial commit file created by gitcid has been removed: $GC_EPOCH_TXT_FILE_PATH"
  fi

  gitcid_log_info "${BASH_SOURCE[0]}" $LINENO "Checking if we are the gitcid repository..."

  if [ "$(basename `pwd`)" == "gitcid" ]; then
    gitcid_log_info "${BASH_SOURCE[0]}" $LINENO "We are the gitcid repository. Running some gitcid-specific tasks."

    # Create GitLab and GitHub Pages HTML site from README.md.
    gitcid_log_info "${BASH_SOURCE[0]}" $LINENO "gitcid task: Generating GitLab and GitHub Pages websites from README.md."

    mkdir -p public
    mkdir -p docs

    cp -f img/gitcid-logo*.png public/
    cp -f img/favicon* public/

    pandoc -s --no-check-certificate -f markdown -t html5 -c index.css --shift-heading-level-by=-1 --highlight-style=breezeDark -o public/index.html README.md
    
    cp -rf public/* docs/

    git add public/*
    git add docs/*

    gitcid_log_info "${BASH_SOURCE[0]}" $LINENO "gitcid task: GitLab and GitHub Pages websites generated successfully from README.md, and added in folders: public/ docs/"

  else
    gitcid_log_info "${BASH_SOURCE[0]}" $LINENO "We aren't the gitcid repository. Skipping some gitcid-specific tasks."
  fi

	gitcid_log_info "${BASH_SOURCE[0]}" $LINENO "The client git hook finished successfully: ${BASH_SOURCE[0]} $@"
}

gc_git_hook_client_pre_commit $@
